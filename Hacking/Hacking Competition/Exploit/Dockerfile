# Use the official Ubuntu 20.04 as the base image
FROM ubuntu:20.04

# Set environment to non-interactive
ENV DEBIAN_FRONTEND=noninteractive

# Install necessary packages, including SSH and sudo
RUN apt-get update && apt-get -y install gcc make lsb-core sudo=1.8.31-1ubuntu1 openssh-server
RUN apt-get install -y vim nano 
# Create necessary users and directories
RUN useradd -m -u 201 "the_one" && \
    echo "the_one:r3dP1ll" | chpasswd && \
    useradd -m -u 202 "morpheus" && \
    echo "morpheus:follow_th3_wh1te_rabbit" | chpasswd && \
    useradd -m -u 203 "oracle" && \
    echo "oracle:know_thyself" | chpasswd && \
    useradd -m -u 204 "agent_smith" && \  
    echo "agent_smith:all_will_be_revealed" | chpasswd && \  
    mkdir -p /home/mainframe && \
    chown -R oracle:oracle /home/mainframe

# Configure SSH
RUN mkdir /var/run/sshd && \
    echo 'Welcome. The Matrix has you...' | tee /etc/motd && \
    sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin no/' /etc/ssh/sshd_config && \
    sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config && \
    echo "UseDNS no" >> /etc/ssh/sshd_config

# Generate SSH host keys
RUN ssh-keygen -A

# Expose SSH on port 22
EXPOSE 22

# Set working directory for exploit files
WORKDIR /home/oracle/mainframe

# Copy exploit files into the mainframe directory
COPY exploit.c . 
COPY shellcode.c . 
COPY Makefile . 

RUN chown oracle:oracle exploit.c
RUN chown oracle:oracle shellcode.c
RUN chown oracle:oracle Makefile

# Create agent_smith's home directory and set permissions
RUN mkdir -p /home/agent_smith && \
    chown agent_smith:agent_smith /home/agent_smith

# Place encoded/encrypted flags across the system
RUN echo "Y2Foc2skdGF0b3JhbGl0eX0=" > /home/the_one/encoded_flag1.txt && \
    chown the_one:the_one /home/the_one/encoded_flag1.txt && chmod 400 /home/the_one/encoded_flag1.txt
RUN echo "pncfg-{ZnJlZV95b3VybWluZH0=" > /var/log/base64_encoded_flag.txt && chmod 444 /var/log/base64_encoded_flag.txt
RUN echo "cahsi-{uryyb_fvqr_jbeq}" | tr 'A-Za-z' 'N-ZA-Mn-za-m' > /home/morpheus/rot13_flag.txt && \
    chown morpheus:morpheus /home/morpheus/rot13_flag.txt && chmod 400 /home/morpheus/rot13_flag.txt
RUN echo "cahsi-{kb_jshq_mqdq_zebx}" > /home/oracle/caesar_shift_flag.txt && \
    chown oracle:oracle /home/oracle/caesar_shift_flag.txt && chmod 400 /home/oracle/caesar_shift_flag.txt
RUN echo "ef9f89a46a5e7f2449e29f82b1f2fbb1de5dd8f151b04ae4f68a8c399ef7a63f" > /etc/sha256_flag.txt && chmod 444 /etc/sha256_flag.txt
RUN echo "VmFuaXNoX0F3YWtlbmVk" > /lib/vanish_flag.txt && chmod 444 /lib/vanish_flag.txt
RUN echo "cahsi-{gurer_vf_ab_gurz}" | tr 'A-Za-z' 'N-ZA-Mn-za-m' > /opt/hint_rot13.txt && chmod 444 /opt/hint_rot13.txt
RUN echo "cahsi-{txsb_qusb_sdfys}" > /usr/local/lib/caesar_shift_two.txt && chmod 444 /usr/local/lib/caesar_shift_two.txt
RUN echo "cahsi-{SG93X0RlZXBfRG9lcz9}" > /home/agent_smith/base64_encoded_flag2.txt && \
    chown agent_smith:agent_smith /home/agent_smith/base64_encoded_flag2.txt && chmod 400 /home/agent_smith/base64_encoded_flag2.txt
RUN echo "cahsi-{vbhkshdy_quzhm_lzqdr_nzmc}" > /var/log/shift_by_5.txt && chmod 444 /var/log/shift_by_5.txt

# Sudo privileges for escalation
RUN echo "the_one ALL=(morpheus) NOPASSWD: /usr/bin/bash" >> /etc/sudoers && \
    echo "morpheus ALL=(oracle) NOPASSWD: /usr/bin/apt" >> /etc/sudoers 

# Add hints for user progression
USER the_one
RUN echo "Hint: Use sudo to channel into Morpheus to access the next level of truth." > /home/the_one/hint.txt

USER morpheus
RUN echo "Hint: Seek the Oracle through sudo to find the final answer." > /home/morpheus/hint.txt

USER oracle
RUN echo "Hint: Exploit the sudo 1.8.31 vulnerability to elevate to root and achieve true awakening." > /home/oracle/hint.txt

# Final flag for root
USER root
RUN echo "cahsi-{final_awakening_you_escaped_the_matrix}" > /root/final_flag.txt && chmod 400 /root/final_flag.txt

# Start SSHD in foreground
CMD ["/usr/sbin/sshd", "-D"]
